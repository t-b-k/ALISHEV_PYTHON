# СЛОВАРИ В PYTHON

# Словарь - это набор пар элементов вида <КЛЮЧ>:<ЗНАЧЕНИЕ>, где все 
# ключи обязательно уникальны (встречаются в наборе единственный раз)
# С помощью этой структуры данных мы одну сущность сопоставляем с другой сущностью. 
# КЛЮЧ и ЗНАЧЕНИЕ могут быть разных типов
# В качестве ключей чаще всего используются строки или числа, а в качестве значений могут быть любые типы данных
# Элементы в словаре не упорядочены, и при выводе на экран последовательность может оказаться произвольной. 
# Доступ к значениям осуществляется по ключу. 

d = {}
d = dict()

d = {"Alex":25, "Petr":37}
print(d)
print(len(d))

# Добавление значения в словарь: просто присваиваем его переменной-словарю с соответствующим индексом
d["Kate"] = 18
print(d)

# В одном словаре могут встречаться ключи и значения разных типов
d1 = {"Alex":25, "Petr":37, "Kate":24, 10:20}
print(d1)

# Как пройтись циклом по элементам словаря? 

for k, v in d1.items() : 
    print(f"Ключ = {k}, значение = {v}")

# Задача 1: 
# Есть список, в котором после каждого строкового значения идет некоторое количество числовых. 
# a = ["first", 12, 2, 3, "second", 20, 10, "third", 15, 56, 70, "fourth", -50]
# Необходимо по данному списку создать словарь, в котором ключами являются строки, а значения - 
# списки идущих за этой строкой чисел. 
# Тип элемента можно проверять при помощи функции type()

a = ["first", 12, 2, 3, "second", 20, 10, "third", 15, 56, 70, "fourth", -50]
#       0     1   2   3     4     5    6    7       8   9   10    11      12

res_dict = {}
ind = 0
while ind < len(a): 
    if type(a[ind]) == str : 
        res_dict[a[ind]] = []
    if ind == len(a)-1 : 
        break
    else : 
        i = ind + 1
        while i < len(a) and type(a[i]) == int :
            res_dict[a[ind]].append(a[i])
            i += 1
        ind = i

print(res_dict)

# Вариант лектора (гораздо красивее!!!): 

res_dict = {}
current_str = ""

for e in a : 
    if type(e) == str : 
        res_dict[e] = []
        current_str = e
    else : 
        res_dict[current_str].append(e)
print(res_dict)

# Задача 2: 
# Подсчитать количество слов в тексте, состоящем только из буквенных слов и символов пробела
# text = "Привет как дела привет арбуз велосипед каникулы привет стол СТОЛ как море солнце и как песок"
# Проверить, встречается ли некоторый ключ в словаре, можно при помощи такой конструкции: 
# if k in our_dict : 

text = "Привет как дела привет арбуз велосипед каникулы привет стол СТОЛ как море солнце и как песок"
words_set = {}
words = text.split(" ")
for elem in words : 
    if not elem.lower() in words_set : 
        words_set[elem.lower()] = 1
    else : 
        words_set[elem.lower()] += 1
print(words_set)

# РЕШЕНИЕ С ПРИМЕНЕНИЕМ ФУНКЦИИ GET

words_set = {}
words = text.split(" ")
for elem in words : 
    words_set[elem] = words_set.get(elem, 0) + 1
# Второй аргумент функции get определяет значение, когторое следует вернуть в случае неудачного поиска!!!

print(words_set)


